{"ast":null,"code":"import { Actions } from \"./types\";\nconst INITIAL_STATE = {\n  alerts: []\n};\nexport default function alertsReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Actions.GENERIC_ALERT:\n      {\n        const text = action.payload.text;\n        const type = action.payload.type;\n        return {\n          alerts: [...state.alerts, {\n            text: text,\n            type: type,\n            id: Math.floor(Math.random() * 1000)\n          }]\n        };\n      }\n\n    case Actions.REMOVE_ALERTS:\n      {\n        return {\n          alerts: []\n        };\n      }\n\n    case Actions.REMOVE_SPECIFIC_ALERT:\n      {\n        let idSelected = action.payload.id;\n        let alertsCopy = [...state.alerts];\n        let filteredAlert = alertsCopy.filter(alert => alert.id !== idSelected);\n        return {\n          alerts: filteredAlert\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/E5854/Documents/GitHub/react_scaffold/src/store/Challenge4/alerts/reducer.tsx"],"names":["Actions","INITIAL_STATE","alerts","alertsReducer","state","action","type","GENERIC_ALERT","text","payload","id","Math","floor","random","REMOVE_ALERTS","REMOVE_SPECIFIC_ALERT","idSelected","alertsCopy","filteredAlert","filter","alert"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;AAYA,MAAMC,aAAmC,GAAG;AAC1CC,EAAAA,MAAM,EAAE;AADkC,CAA5C;AAIA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGH,aAA/B,EAA8CI,MAA9C,EAA2D;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,OAAO,CAACO,aAAb;AAA4B;AAC1B,cAAMC,IAAY,GAAGH,MAAM,CAACI,OAAP,CAAeD,IAApC;AACA,cAAMF,IAAY,GAAGD,MAAM,CAACI,OAAP,CAAeH,IAApC;AACA,eAAO;AACLJ,UAAAA,MAAM,EAAE,CACN,GAAGE,KAAK,CAACF,MADH,EAEN;AACEM,YAAAA,IAAI,EAAEA,IADR;AAEEF,YAAAA,IAAI,EAAEA,IAFR;AAGEI,YAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B;AAHN,WAFM;AADH,SAAP;AAUD;;AACD,SAAKb,OAAO,CAACc,aAAb;AAA4B;AAC1B,eAAO;AAAEZ,UAAAA,MAAM,EAAE;AAAV,SAAP;AACD;;AACD,SAAKF,OAAO,CAACe,qBAAb;AAAoC;AAClC,YAAIC,UAAU,GAAGX,MAAM,CAACI,OAAP,CAAeC,EAAhC;AACA,YAAIO,UAAmB,GAAG,CAAC,GAAGb,KAAK,CAACF,MAAV,CAA1B;AACA,YAAIgB,aAA0B,GAAGD,UAAU,CAACE,MAAX,CAC/BC,KAAK,IAAIA,KAAK,CAACV,EAAN,KAAaM,UADS,CAAjC;AAGA,eAAO;AAAEd,UAAAA,MAAM,EAAEgB;AAAV,SAAP;AACD;;AACD;AACE,aAAOd,KAAP;AA3BJ;AA6BD","sourcesContent":["import { Actions } from \"./types\";\r\n\r\nexport interface Alert {\r\n  id: number;\r\n  text: string;\r\n  type: string;\r\n}\r\n\r\ninterface initiaLStateInteface {\r\n  alerts: Alert[];\r\n}\r\n\r\nconst INITIAL_STATE: initiaLStateInteface = {\r\n  alerts: []\r\n};\r\n\r\nexport default function alertsReducer(state = INITIAL_STATE, action: any) {\r\n  switch (action.type) {\r\n    case Actions.GENERIC_ALERT: {\r\n      const text: string = action.payload.text;\r\n      const type: string = action.payload.type;\r\n      return {\r\n        alerts: [\r\n          ...state.alerts,\r\n          {\r\n            text: text,\r\n            type: type,\r\n            id: Math.floor(Math.random() * 1000)\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case Actions.REMOVE_ALERTS: {\r\n      return { alerts: [] };\r\n    }\r\n    case Actions.REMOVE_SPECIFIC_ALERT: {\r\n      let idSelected = action.payload.id;\r\n      let alertsCopy: Alert[] = [...state.alerts];\r\n      let filteredAlert: Alert | any = alertsCopy.filter(\r\n        alert => alert.id !== idSelected\r\n      );\r\n      return { alerts: filteredAlert };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}