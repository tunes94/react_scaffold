{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E5854\\\\Documents\\\\GitHub\\\\react_scaffold\\\\src\\\\screens\\\\Challenge4\\\\hoc\\\\hocAlert.tsx\";\nimport React from \"react\";\nimport { removeAlerts } from \"../../../store/Challenge4/alerts/action\";\nimport { removeSpecificAlert } from \"../../../store/Challenge4/alerts/action\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst showAlert = WrappedComponent => {\n  class HocAlert extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {};\n    } // componentDidMount() {\n    //   const { removeAlerts } = this.props;\n    //   removeAlerts && removeAlerts();\n    // }\n\n\n    render() {\n      const removeSpecificAlert = this.props.removeSpecificAlert;\n      const alerts = this.props.alerts;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, alerts && alerts.map(alert => React.createElement(\"div\", {\n        onClick: () => {\n          removeSpecificAlert && removeSpecificAlert(alert.id);\n        },\n        role: \"alert\",\n        key: alert.id,\n        className: \"alert alert-\".concat(alert.type),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, alert.text)), React.createElement(WrappedComponent, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n\n  }\n\n  const mapStateToProps = state => ({\n    alerts: state.alertsReducer.alerts\n  });\n\n  const mapDispatchToProps = dispatch => bindActionCreators({\n    removeAlerts,\n    removeSpecificAlert\n  }, dispatch);\n\n  return connect(mapStateToProps, mapDispatchToProps)(HocAlert);\n};\n\nexport default showAlert;","map":{"version":3,"sources":["C:/Users/E5854/Documents/GitHub/react_scaffold/src/screens/Challenge4/hoc/hocAlert.tsx"],"names":["React","removeAlerts","removeSpecificAlert","connect","bindActionCreators","showAlert","WrappedComponent","HocAlert","Component","constructor","props","state","render","alerts","map","alert","id","type","text","mapStateToProps","alertsReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,yCAA7B;AACA,SAASC,mBAAT,QAAoC,yCAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,SAAS,GAAIC,gBAAD,IAA2B;AAS3C,QAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAqE;AACnEC,IAAAA,WAAW,CAACC,KAAD,EAAuB;AAChC,YAAMA,KAAN;AACA,WAAKC,KAAL,GAAa,EAAb;AACD,KAJkE,CAMnE;AACA;AACA;AACA;;;AAEAC,IAAAA,MAAM,GAAG;AAAA,YACCV,mBADD,GACyB,KAAKQ,KAD9B,CACCR,mBADD;AAAA,YAECW,MAFD,GAEY,KAAKH,KAFjB,CAECG,MAFD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,MAAM,IACLA,MAAM,CAACC,GAAP,CAAWC,KAAK,IACd;AACE,QAAA,OAAO,EAAE,MAAY;AACnBb,UAAAA,mBAAmB,IAAIA,mBAAmB,CAACa,KAAK,CAACC,EAAP,CAA1C;AACD,SAHH;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,GAAG,EAAED,KAAK,CAACC,EALb;AAME,QAAA,SAAS,wBAAiBD,KAAK,CAACE,IAAvB,CANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGF,KAAK,CAACG,IART,CADF,CAFJ,EAcE,oBAAC,gBAAD,oBAAsB,KAAKR,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdF,CADF;AAkBD;;AAhCkE;;AAkCrE,QAAMS,eAAe,GAAIR,KAAD,KAAuC;AAC7DE,IAAAA,MAAM,EAAEF,KAAK,CAACS,aAAN,CAAoBP;AADiC,GAAvC,CAAxB;;AAIA,QAAMQ,kBAAkB,GAAIC,QAAD,IACzBlB,kBAAkB,CAAC;AAAEH,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,EAAwCoB,QAAxC,CADpB;;AAGA,SAAOnB,OAAO,CACZgB,eADY,EAEZE,kBAFY,CAAP,CAGLd,QAHK,CAAP;AAID,CAtDD;;AAwDA,eAAeF,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Alert } from \"../../../store/Challenge4/alerts/reducer\";\r\nimport { removeAlerts } from \"../../../store/Challenge4/alerts/action\";\r\nimport { removeSpecificAlert } from \"../../../store/Challenge4/alerts/action\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst showAlert = (WrappedComponent: any) => {\r\n  interface HocAlertProps {\r\n    alerts?: Alert[];\r\n    removeAlerts?: () => void;\r\n    removeSpecificAlert?: (id: number) => void;\r\n  }\r\n\r\n  interface HocAlertState {}\r\n\r\n  class HocAlert extends React.Component<HocAlertProps, HocAlertState> {\r\n    constructor(props: HocAlertProps) {\r\n      super(props);\r\n      this.state = {};\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //   const { removeAlerts } = this.props;\r\n    //   removeAlerts && removeAlerts();\r\n    // }\r\n\r\n    render() {\r\n      const { removeSpecificAlert } = this.props;\r\n      const { alerts } = this.props;\r\n      return (\r\n        <div>\r\n          {alerts &&\r\n            alerts.map(alert => (\r\n              <div\r\n                onClick={(): void => {\r\n                  removeSpecificAlert && removeSpecificAlert(alert.id);\r\n                }}\r\n                role=\"alert\"\r\n                key={alert.id}\r\n                className={`alert alert-${alert.type}`}\r\n              >\r\n                {alert.text}\r\n              </div>\r\n            ))}\r\n          <WrappedComponent {...this.props}></WrappedComponent>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  const mapStateToProps = (state?: any): { alerts: Alert[] } => ({\r\n    alerts: state.alertsReducer.alerts\r\n  });\r\n\r\n  const mapDispatchToProps = (dispatch: any): any =>\r\n    bindActionCreators({ removeAlerts, removeSpecificAlert }, dispatch);\r\n\r\n  return connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(HocAlert);\r\n};\r\n\r\nexport default showAlert;\r\n"]},"metadata":{},"sourceType":"module"}