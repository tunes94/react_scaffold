{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E5854\\\\Documents\\\\GitHub\\\\react_scaffold\\\\src\\\\screens\\\\Challenge35\\\\createTodo.tsx\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addToDo } from \"../../store/Challenge35/action\";\n\nclass CreateToDo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Challenge 3.5\"), React.createElement(\"div\", {\n      className: \"container shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-inline p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Create a new To Do\"), React.createElement(\"input\", {\n      name: \"text\",\n      value: text,\n      onChange: this.handleChange,\n      type: \"text\",\n      className: \"form-control col-6 m-3\",\n      \"aria-describedby\": \"helpId\",\n      placeholder: \"To Do text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        try {\n          this.props.addToDo && this.props.addToDo(text);\n          alert(\"New To Do created with success!!\");\n        } catch {\n          alert(\"Error!\");\n        }\n      },\n      type: \"button\",\n      className: \"btn btn-outline-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addToDo\n}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(CreateToDo);","map":{"version":3,"sources":["C:/Users/E5854/Documents/GitHub/react_scaffold/src/screens/Challenge35/createTodo.tsx"],"names":["React","connect","bindActionCreators","addToDo","CreateToDo","Component","constructor","props","handleChange","event","setState","text","target","value","state","render","alert","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,gCAAxB;;AAWA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyE;AACvEC,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAClC,UAAMA,KAAN;;AADkC,SAOpCC,YAPoC,GAOpBC,KAAD,IAAgD;AAC7D,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADP,OAAd;AAGD,KAXmC;;AAElC,SAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAQDI,EAAAA,MAAM,GAAgB;AAAA,UACZJ,IADY,GACH,KAAKG,KADF,CACZH,IADY;AAEpB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEA,IAFT;AAGE,MAAA,QAAQ,EAAE,KAAKH,YAHjB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,SAAS,EAAC,wBALZ;AAME,0BAAiB,QANnB;AAOE,MAAA,WAAW,EAAC,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE;AACE,MAAA,OAAO,EAAE,MAAY;AACnB,YAAI;AACF,eAAKD,KAAL,CAAWJ,OAAX,IAAsB,KAAKI,KAAL,CAAWJ,OAAX,CAAmBQ,IAAnB,CAAtB;AACAK,UAAAA,KAAK,CAAC,kCAAD,CAAL;AACD,SAHD,CAGE,MAAM;AACNA,UAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,OARH;AASE,MAAA,IAAI,EAAC,QATP;AAUE,MAAA,SAAS,EAAC,sBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF,CAFF,CADF;AAkCD;;AAlDsE;;AAoDzE,MAAMC,kBAAkB,GAAIC,QAAD,IACzBhB,kBAAkB,CAAC;AAAEC,EAAAA;AAAF,CAAD,EAAce,QAAd,CADpB;;AAGA,eAAejB,OAAO,CACpB,IADoB,EAEpBgB,kBAFoB,CAAP,CAGbb,UAHa,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { addToDo } from \"../../store/Challenge35/action\";\r\n\r\nexport interface CreateToDoProps {\r\n  //   text: string;\r\n  addToDo?: (text: string) => void;\r\n}\r\n\r\nexport interface InternalState {\r\n  text: string;\r\n}\r\n\r\nclass CreateToDo extends React.Component<CreateToDoProps, InternalState> {\r\n  constructor(props: CreateToDoProps) {\r\n    super(props);\r\n    this.state = {\r\n      text: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      text: event.target.value\r\n    });\r\n  };\r\n\r\n  render(): JSX.Element {\r\n    const { text } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Challenge 3.5</h1>\r\n        <div className=\"container shadow\">\r\n          <div className=\"form-inline p-3\">\r\n            <h5>Create a new To Do</h5>\r\n            <input\r\n              name=\"text\"\r\n              value={text}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              className=\"form-control col-6 m-3\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"To Do text\"\r\n            ></input>\r\n\r\n            <button\r\n              onClick={(): void => {\r\n                try {\r\n                  this.props.addToDo && this.props.addToDo(text);\r\n                  alert(\"New To Do created with success!!\");\r\n                } catch {\r\n                  alert(\"Error!\");\r\n                }\r\n              }}\r\n              type=\"button\"\r\n              className=\"btn btn-outline-dark\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: any): any =>\r\n  bindActionCreators({ addToDo }, dispatch);\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CreateToDo);\r\n"]},"metadata":{},"sourceType":"module"}