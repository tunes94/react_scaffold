{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\E5854\\\\Documents\\\\GitHub\\\\react_scaffold\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Actions } from \"./types\";\nconst INITIAL_STATE = {\n  users: [{\n    user_name: \"Ruben\",\n    address: \"Rua Joaquim\",\n    age: 55,\n    user_id: 1\n  }]\n};\nexport default function challenge4Reducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Actions.ADD_USER:\n      {\n        return {\n          users: [...state.users, {\n            user_name: action.payload.user_name,\n            address: action.payload.address,\n            age: action.payload.age,\n            user_id: Math.floor(Math.random() * 1000)\n          }]\n        };\n      }\n\n    case Actions.EDIT_USER:\n      {\n        let idSelected = action.payload.user_id;\n        let newName = action.payload.user_name;\n        let newAddress = action.payload.address;\n        let newAge = action.payload.age;\n        let usersCopy = [...state.users];\n        usersCopy.forEach(user => {\n          if (idSelected === user.user_id) {\n            user.user_name = newName;\n            user.address = newAddress;\n            user.age = newAge;\n            user.user_id = idSelected;\n          }\n\n          return user;\n        });\n        return _objectSpread({}, state, {\n          users: usersCopy\n        });\n      }\n\n    case Actions.DELETE_USER:\n      {\n        let userSelected = action.payload.user_id;\n        let usersCopy = [...state.users];\n        let filteredUsers = usersCopy.filter(user => user.user_id !== userSelected);\n        return {\n          users: filteredUsers\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/E5854/Documents/GitHub/react_scaffold/src/store/Challenge4/users/reducer.tsx"],"names":["Actions","INITIAL_STATE","users","user_name","address","age","user_id","challenge4Reducer","state","action","type","ADD_USER","payload","Math","floor","random","EDIT_USER","idSelected","newName","newAddress","newAge","usersCopy","forEach","user","DELETE_USER","userSelected","filteredUsers","filter"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,SAAxB;AAaA,MAAMC,aAAmC,GAAG;AAC1CC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,SAAS,EAAE,OADb;AAEEC,IAAAA,OAAO,EAAE,aAFX;AAGEC,IAAAA,GAAG,EAAE,EAHP;AAIEC,IAAAA,OAAO,EAAE;AAJX,GADK;AADmC,CAA5C;AAWA,eAAe,SAASC,iBAAT,CAA2BC,KAAK,GAAGP,aAAnC,EAAkDQ,MAAlD,EAA+D;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,OAAO,CAACW,QAAb;AAAuB;AACrB,eAAO;AACLT,UAAAA,KAAK,EAAE,CACL,GAAGM,KAAK,CAACN,KADJ,EAEL;AACEC,YAAAA,SAAS,EAAEM,MAAM,CAACG,OAAP,CAAeT,SAD5B;AAEEC,YAAAA,OAAO,EAAEK,MAAM,CAACG,OAAP,CAAeR,OAF1B;AAGEC,YAAAA,GAAG,EAAEI,MAAM,CAACG,OAAP,CAAeP,GAHtB;AAIEC,YAAAA,OAAO,EAAEO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B;AAJX,WAFK;AADF,SAAP;AAWD;;AACD,SAAKf,OAAO,CAACgB,SAAb;AAAwB;AACtB,YAAIC,UAAU,GAAGR,MAAM,CAACG,OAAP,CAAeN,OAAhC;AACA,YAAIY,OAAO,GAAGT,MAAM,CAACG,OAAP,CAAeT,SAA7B;AACA,YAAIgB,UAAU,GAAGV,MAAM,CAACG,OAAP,CAAeR,OAAhC;AACA,YAAIgB,MAAM,GAAGX,MAAM,CAACG,OAAP,CAAeP,GAA5B;AAEA,YAAIgB,SAAiB,GAAG,CAAC,GAAGb,KAAK,CAACN,KAAV,CAAxB;AAEAmB,QAAAA,SAAS,CAACC,OAAV,CAAmBC,IAAD,IAAgB;AAChC,cAAIN,UAAU,KAAKM,IAAI,CAACjB,OAAxB,EAAiC;AAC/BiB,YAAAA,IAAI,CAACpB,SAAL,GAAiBe,OAAjB;AACAK,YAAAA,IAAI,CAACnB,OAAL,GAAee,UAAf;AACAI,YAAAA,IAAI,CAAClB,GAAL,GAAWe,MAAX;AACAG,YAAAA,IAAI,CAACjB,OAAL,GAAeW,UAAf;AACD;;AACD,iBAAOM,IAAP;AACD,SARD;AASA,iCACKf,KADL;AAEEN,UAAAA,KAAK,EAAEmB;AAFT;AAID;;AACD,SAAKrB,OAAO,CAACwB,WAAb;AAA0B;AACxB,YAAIC,YAAY,GAAGhB,MAAM,CAACG,OAAP,CAAeN,OAAlC;AACA,YAAIe,SAAiB,GAAG,CAAC,GAAGb,KAAK,CAACN,KAAV,CAAxB;AACA,YAAIwB,aAAyB,GAAGL,SAAS,CAACM,MAAV,CAC9BJ,IAAI,IAAIA,IAAI,CAACjB,OAAL,KAAiBmB,YADK,CAAhC;AAGA,eAAO;AAAEvB,UAAAA,KAAK,EAAEwB;AAAT,SAAP;AACD;;AACD;AACE,aAAOlB,KAAP;AA7CJ;AA+CD","sourcesContent":["import { Actions } from \"./types\";\r\n\r\nexport interface User {\r\n  user_name: string;\r\n  address: string;\r\n  age: number | string;\r\n  user_id: number;\r\n}\r\n\r\ninterface initiaLStateInteface {\r\n  users: User[];\r\n}\r\n\r\nconst INITIAL_STATE: initiaLStateInteface = {\r\n  users: [\r\n    {\r\n      user_name: \"Ruben\",\r\n      address: \"Rua Joaquim\",\r\n      age: 55,\r\n      user_id: 1\r\n    }\r\n  ]\r\n};\r\n\r\nexport default function challenge4Reducer(state = INITIAL_STATE, action: any) {\r\n  switch (action.type) {\r\n    case Actions.ADD_USER: {\r\n      return {\r\n        users: [\r\n          ...state.users,\r\n          {\r\n            user_name: action.payload.user_name,\r\n            address: action.payload.address,\r\n            age: action.payload.age,\r\n            user_id: Math.floor(Math.random() * 1000)\r\n          }\r\n        ]\r\n      };\r\n    }\r\n    case Actions.EDIT_USER: {\r\n      let idSelected = action.payload.user_id;\r\n      let newName = action.payload.user_name;\r\n      let newAddress = action.payload.address;\r\n      let newAge = action.payload.age;\r\n\r\n      let usersCopy: User[] = [...state.users];\r\n\r\n      usersCopy.forEach((user: User) => {\r\n        if (idSelected === user.user_id) {\r\n          user.user_name = newName;\r\n          user.address = newAddress;\r\n          user.age = newAge;\r\n          user.user_id = idSelected;\r\n        }\r\n        return user;\r\n      });\r\n      return {\r\n        ...state,\r\n        users: usersCopy\r\n      };\r\n    }\r\n    case Actions.DELETE_USER: {\r\n      let userSelected = action.payload.user_id;\r\n      let usersCopy: User[] = [...state.users];\r\n      let filteredUsers: User | any = usersCopy.filter(\r\n        user => user.user_id !== userSelected\r\n      );\r\n      return { users: filteredUsers };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}